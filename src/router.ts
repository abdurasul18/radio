// src/router.ts
import { createRouter, createWebHistory } from 'vue-router'
import { routes } from 'vue-router/auto-routes'// Import routes generated by unplugin-vue-router
import { useAuthStore } from './store/auth'

const router = createRouter({
  history: createWebHistory(),
  routes,
})

router.beforeEach((to, from, next) => {
  // Check if the user is authenticated or has an active session
  const { user, isAuthenticated, routes } = toRefs(useAuthStore())
  if (to.name !== '/auth/login' && !isAuthenticated.value) {
    return next('/auth/login')
  }
  else {
   let menuRoute = routes.value.find((route) => route.to === to.path)
    if(menuRoute && menuRoute.roles?.length ){
      if(menuRoute.roles.includes(user.value?.role!)){
        return next()
      }
      else {
        return next('/')
      }
    }
    else {
      return next()
    }
   
  }
}
)

export default router